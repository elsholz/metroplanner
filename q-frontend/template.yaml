AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: S3 bucket for Frontend Deployment

Mappings:
  EnvMap:
    prod:
      BucketName: "metroplanner-frontend-prod"
      Domain: "ich-hab-plan.de"
      CertificateArn: "arn:aws:acm:eu-central-1:891666753558:certificate/8e107838-0e72-47c5-bd60-39b4ffee4dc3"
      OriginId: prod-bucket
    dev:
      BucketName: "metroplanner-frontend-dev"
      Domain: "dev.ich-hab-plan.de"
      CertificateArn: "arn:aws:acm:eu-central-1:891666753558:certificate/db85db90-10c6-4f2d-9144-f55a2ec33031"
      OriginId: dev-bucket

Parameters:
  env:
    Type: String
    Description: Environment of the deployment (Lowercase)

Conditions:
  IsStaging: !Equals [!Ref env, prod]

Resources:
  MetroplannerCfDistro:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - "ich-hab-plan.de"
        Staging: !If [IsStaging, false, true]
        PriceClass: PriceClass_100
        Enabled: true
        DefaultCacheBehavior:
          - AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
            Compress: true
            # OriginRequestPolicyId: String
            # RealtimeLogConfigArn: String
            # ResponseHeadersPolicyId: String
            # SmoothStreaming: Boolean
            # TargetOriginId: String
            # TrustedKeyGroups:
            #   - String
            # TrustedSigners:
            #   - String
            # ViewerProtocolPolicy: String

  #       CacheBehaviors:
  #         - CacheBehavior
  #       CNAMEs:
  #         - String
  #       Comment: String
  #       ContinuousDeploymentPolicyId: String
  #       CustomErrorResponses:
  #         - CustomErrorResponse
  #       DefaultRootObject: String
  #       HttpVersion: String
  #       IPV6Enabled: Boolean
  #       Logging:
  #         Logging
  #       OriginGroups:
  #         OriginGroups
        Origins:
          - CustomOriginConfig:
              OriginSSLProtocols:
                - !FindInMap [EnvMap, !Ref env, CertificateArn]
            DomainName: !GetAtt MetroplannerBucket.WebsiteURL
            Id: !FindInMap [EnvMap, !Ref env, OriginId]
            # OriginAccessControlId: String
            # OriginCustomHeaders:
            #   - OriginCustomHeader
            # OriginPath: String
            # OriginShield:
            # OriginShield
  #       Restrictions:
  #         Restrictions
  #       ViewerCertificate:
  #         ViewerCertificate
  #       WebACLId: String
      Tags:
        - Key: App
          Value: metroplanner
        - Key: Environment
          Value: !Ref env
  MetroplannerBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !FindInMap [EnvMap, !Ref env, BucketName]
      # PublicAccessBlockConfiguration:
      #   BlockPublicAcls: false
      #   BlockPublicPolicy: false
      #   IgnorePublicAcls: false
      #   RestrictPublicBuckets: false
      Tags:
        - Key: App
          Value: metroplanner
        - Key: Environment
          Value: !Ref env
      WebsiteConfiguration:
        IndexDocument: index.html

  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      PolicyDocument:
        Id: metroplannerPublicReadPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref MetroplannerBucket
                - /*
      Bucket: !Ref MetroplannerBucket

  # metroplannerDNSEntry:
  #   Type: AWS::Route53::RecordSetGroup
  #   Properties:
  #     HostedZoneName: "ich-hab-plan.de."
  #     Comment: Zone apex alias.
  #     RecordSets:
  #       - Name: !FindInMap [EnvMap, !Ref env, Domain]
  #         Type: A
  #         AliasTarget:
  #           HostedZoneId: "Z21DNDUVLTQW6Q"
  #           DNSName: !Sub
  #             - "${BucketName}.s3-website-eu-central-1.amazonaws.com"
  #             - BucketName: !FindInMap [EnvMap, !Ref env, BucketName]
  #       # - Name: !Sub
  #       #     - www.${Do}
  #       #     - Do: !FindInMap [EnvMap, !Ref env, Domain]
  #       #   Type: CNAME
  #       #   TTL: 900
  #       #   ResourceRecords:
  #       #     - !GetAtt MetroplannerBucket.DomainName

Outputs:
  WebsiteURL:
    Value: !GetAtt MetroplannerBucket.WebsiteURL
    Description: URL for website hosted on S3
