AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: Lambda Function and API Gateway for metroplanner.

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Mappings:
  EnvMap:
    prod:
      CertificateArn: "arn:aws:acm:eu-central-1:891666753558:certificate/1552d28f-f059-4af0-942e-c2b5022dc828"
      Domain: "api.ich-hab-plan.de"
      FunctionName: "MetroplannerFuncProd"
      ApiName: "MetroplannerApiProd"
    dev:
      CertificateArn: "arn:aws:acm:eu-central-1:891666753558:certificate/dde08a63-1bf1-49fa-8e12-c55df088cce2"
      Domain: "api.dev.ich-hab-plan.de"
      FunctionName: "MetroplannerFuncDev"
      ApiName: "MetroplannerApiDev"

Parameters:
  env:
    Type: String
    Description: Environment of the deployment (Lowercase)

Resources:
  MetroplannerFunc:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !FindInMap [EnvMap, !Ref env, FunctionName]
      CodeUri: metroplanner_api/
      Handler: metroplanner_api.lambda_handler
      Runtime: python3.9
      Architectures:
        - arm64
      Policies:
        - Statement:
            - Sid: MetroplannerAccessSecretsManager
              Effect: Allow
              Action:
                - secretsmanager:GetResourcePolicy
                - secretsmanager:GetSecretValue
                - secretsmanager:DescribeSecret
                - secretsmanager:ListSecretVersionIds
              Resource: "arn:aws:secretsmanager:eu-central-1:891666753558:secret:MetroplannerKeys-xR1Pb5"
      # Events: {}
        # GetPlan:
        #   Type: HttpApi
        #   Properties:
        #     Path: /plan/{shortlink}
        #     Method: get
        #     ApiId: !Ref MetroplannerApi
        # PatchUserdata:
        #   Type: HttpApi
        #   Properties:
        #     Path: /
        #     Method: patch
        #     ApiId: !Ref MetroplannerApi
        # DeleteUserdata:
        #   Type: HttpApi
        #   Properties:
        #     Path: /
        #     Method: delete
        #     ApiId: !Ref MetroplannerApi
      Tags:
        App: metroplanner
        Environment: !Ref env
  MetroplannerApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref env
      Name: !FindInMap [EnvMap, !Ref env, ApiName]
      DefinitionBody:
        # API Spec for Metroplanner including AWS API Gateway Integration
        openapi: 3.0.0
        info:
          version: "1.0.0"
          title: !Ref AWS::StackName
          description: API for the Metroplanner project
        paths:
          # PUBLIC API
          /plan/{shortlink}:
            get:
              tags:
                - Public API
              description: Get basic plan data of a metroplan identified by its shortlink
              parameters:
                - in: path
                  name: shortlink
                  schema:
                    type: string
                  required: true
                  description: Public shortlink of the plan
              responses:
                '200':
                  description: OK
                  content:
                    text/json:
                      schema:
                        $ref: '#/components/schemas/publicGetPlan'
          /api/plandata/{shortlink}:
            get:
              tags:
                - Public API
              description: Get latest state of a metroplan identified by its shortlink
              parameters:
                - in: path
                  name: shortlink
                  schema:
                    type: string
                  required: true
                  description: Public shortlink of the plan
              responses:
                '200':
                  description: OK
                  content:
                    text/json:
                      schema:
                        $ref: '#/components/schemas/publicGetPlanData'
          /user/{userID}:
            get:
              tags:
                - Public API
              description: Get user profile, if publicly accessible
              parameters:
                - in: path
                  name: userID
                  schema:
                    type: string
                  required: true
                  description: ID of the user to get
              responses:
                '200':
                  description: OK
                  content:
                    text/json:
                      schema:
                        $ref: '#/components/schemas/publicGetUser'
          /theme/{colorThemeID}:
            get:
              tags:
                - Public API
              description: Get color theme, if publicly available
              parameters:
                - in: path
                  name: colorThemeID
                  schema:
                    type: string
                  required: true
                  description: ID of the color theme
              responses:
                '200':
                  description: OK
                  content:
                    text/json:
                      schema:
                        $ref: '#/components/schemas/publicGetTheme'
          /stats/{shortlink}:
            get:
              tags:
                - Public API
              description: Get stats for a publicly available plan given its shortlink
              parameters:
                - in: path
                  name: shortlink
                  schema:
                    type: string
                  required: true
                  description: Plan shortlink for which to get stats
              responses:
                '200':
                  description: OK
                  content:
                    text/json:
                      schema:
                        $ref: '#/components/schemas/publicGetStats'
          # PRIVATE API
          /_user:
            get:
              tags:
                - Private API
              description: Get stats for a publicly available plan given its shortlink
              responses:
                '200':
                  description: OK
                  # content:
                    # text/json:
                      # schema:
          /_plans:
            post:
              tags:
                - Private API
              description: Get stats for a publicly available plan given its shortlink
              responses:
                '200':
                  description: OK
                  # content:
                    # text/json:
                      # schema:
          /_plans/{planid}:
            get:
              tags:
                - Private API
              description: Get stats for a publicly available plan given its shortlink
              parameters:
                - in: path
                  name: planid
                  schema:
                    type: string
                  required: true
                  description: Plan UUID
              responses:
                '200':
                  description: OK
                  # content:
                    # text/json:
                      # schema:
            patch:
              tags:
                - Private API
              description: Get stats for a publicly available plan given its shortlink
              parameters:
                - in: path
                  name: planid
                  schema:
                    type: string
                  required: true
                  description: Plan UUID
              responses:
                '200':
                  description: OK
                  # content:
                    # text/json:
                      # schema:
          /_links/{planid}:
            get:
              tags:
                - Private API
              description: Get stats for a publicly available plan given its shortlink
              parameters:
                - in: path
                  name: planid
                  schema:
                    type: string
                  required: true
                  description: Plan UUID
              responses:
                '200':
                  description: OK
                  # content:
                    # text/json:
                      # schema:
          /_links/:
            post:
              tags:
                - Private API
              description: Get stats for a publicly available plan given its shortlink
              responses:
                '200':
                  description: OK
                  #content:
                  # text/json:
                    #  schema:
          /_links/{shortlink}:
            patch:
              tags:
                - Private API
              description: Get stats for a publicly available plan given its shortlink
              parameters:
                - in: path
                  name: shortlink
                  schema:
                    type: string
                  required: true
                  description: Plan UUID
              responses:
                '200':
                  description: OK
                  #content:
                    #text/json:
                      # schema:
                        
        components:
          schemas:
            publicGetUser:
              type: object
              description: Document containing some user settings.
              properties:
                _id:
                  type: string
                  description: ID by which this user is publicly identified. Differs from the username.
                username:
                  type: string
                  description: User this profile is for. Not publicly accessible.
                displayName:
                  type: string
                  description: If profile is public, this is the user's display name.
                mailto:
                  type: string
                  description: If profile is public, email address that users can view. May be empty.
                profileViews:
                  type: number
                  description: Number of views on this profile, while it was publicly accessible.
            publicGetTheme:
              type: object
              description: Document describing a color theme for a metro map.
              properties:
                themeName:
                  type: string
                  description: Display name of the color theme.
                forkedFrom:
                  type: string
                  description: ID of the color theme this one has been forked from
                ownedBy:
                  type: string
                  description: User who owns this colortheme. Empty if available by default
                themeData:
                  type: object
                  properties:
                    backgroundColor:
                      type: string
                    fontColor:
                      type: string
                    lineColors:
                      type: array
                      items:
                        type: string
                    landscape:
                      type: object
                      properties:
                        river:
                          type: string
                        border:
                          type: string
            publicGetStats: 
              type: object
              properties:
                views:
                  type: integer
                  description: Number of views for shortlink in requested time frame.
            publicGetPlan:
              type: object
              properties:
                forkedFrom:
                  type: string
                  description: Public link of the plan this one has been forked from.
                ownedBy:
                  type: string
                  description: User who owns this plan.
                planName:
                  type: string
                  description: Display name of this plan.
                colorTheme:
                  type: string
                  description: ID of the plans color theme.
                createdAt:
                  type: string
                  description: Datetime when this plan was first created.
                lastModified:
                  type: string
                  description: Datetime when this plan was last modified
                numberOfNodes:
                  type: number
                  description: The number of nodes in the current state.
                numberOfLines:
                  type: number
                  description: The number of lines in the current state.
            publicGetPlanData:
              type: object
              description: Document describing the state of a metro plan in its history
              properties:
                createdAt:
                  type: string
                  description: Datetime when this plan state was created.
                nodes:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      location:
                        type: array
                        items:
                          type: number
                        minItems: 2
                        maxItems: 2
                      marker:
                        type: object
                        properties:
                          width:
                            type: number
                          height:
                            type: number
                          sizeFactor:
                            oneOf:
                              - type: number
                              - type: string
                                enum:
                                  - sqrt2
                          rotation:
                            type: number
                      label:
                        type: object
                        properties:
                          class:
                            type: string
                            enum:
                              - centered
                              - left_ascending
                              - right_ascending
                              - left_descending
                              - right_descending
                              - left
                              - right
                          text:
                            type: string
                          anchor:
                            type: object
                            properties:
                              node:
                                oneOf:
                                  - type: array
                                    items:
                                      type: number
                                    minItems: 2
                                    maxItems: 2
                                  - type: string
                              xShift:
                                type: number
                              yShift:
                                type: number
                              width:
                                type: number
                              height:
                                type: number
                          styling:
                            type: object
                            properties:
                              fontSize:
                                type: number
                        required:
                          - class
                          - text
                          - anchor
                lines:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      name:
                        type: string
                      color:
                        type: string
                      borderWidth:
                        type: number
                      borderStyle:
                        type: string
                      borderColor:
                        type: string
                      width:
                        type: number
                      connections:
                        type: array
                        items:
                          type: object
                          properties:
                            nodes:
                              type: array
                              items:
                                type: object
                                properties:
                                  node:
                                    oneOf:
                                      - type: array
                                        items:
                                          type: number
                                        minItems: 2
                                        maxItems: 2
                                      - type: string
                                  xShift:
                                    type: number
                                  yShift:
                                    type: number
                                  width:
                                    type: number
                                  height:
                                    type: number
                additionalLabels:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      class:
                        type: string
                        enum:
                          - centered
                          - left_ascending
                          - right_ascending
                          - left_descending
                          - right_descending
                          - left
                          - right
                      text:
                        type: string
                      anchor:
                        type: object
                        properties:
                          node:
                    oneOf:
                      - type: array
                        items:
                          type: number
                        minItems: 2
                        maxItems: 2
                      - type: string
                  xShift:
                    type: number
                  yShift:
                    type: number
                  width:
                    type: number
                  height:
                    type: number
              styling:
                type: object
                properties:
                  fontSize:
                    type: number
      Domain:
        DomainName: !FindInMap [EnvMap, !Ref env, Domain]
        CertificateArn: !FindInMap [EnvMap, !Ref env, CertificateArn]
        Route53:
          HostedZoneId: "Z06561501FFWOSR6LVUYR"
      Tags:
        App: metroplanner
        Environment: !Ref env
Outputs:
  MetroplannerApiId:
    Description: Api ID of MetroplannerApi
    Value:
      Ref: MetroplannerApi
  MetroplannerFunc:
    Description: "Metroplanner Function ARN"
    Value: !GetAtt MetroplannerFunc.Arn
  MetroplannerFuncIamRole:
    Description: "Implicit IAM Role created for Metroplanner function"
    Value: !GetAtt MetroplannerFuncRole.Arn

